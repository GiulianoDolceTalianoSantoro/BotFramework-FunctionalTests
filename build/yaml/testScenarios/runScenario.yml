parameters:
  scenarios: []

stages:
  - ${{ each scenario in parameters.scenarios }}:
    - stage: "${{ scenario.name }}"
      displayName: "Test ${{ scenario.name }} Scenario"
      ${{ if eq(scenario.dependsOn, '') }}:
        dependsOn: "Download_Variables"
      ${{ if ne(scenario.dependsOn, '') }}:
        dependsOn: ["Download_Variables", "${{ scenario.dependsOn }}"]
      jobs:
        - job: Test
          variables:
            DeploymentBuildSuffix: $[ stageDependencies.Download_Variables.Download_Variables.outputs['Set_Variables.DeploymentBuildSuffix'] ]
          steps:
            - template: configureConsumers.yml
              parameters:
                scenario: ${{ scenario.name }}
                bots:
                  - key: "SimpleHostBotDotNet"
                    botName: "bffnsimplehostbotdotnet"
                    configType: 0
                  
                  - key: "SimpleHostBotDotNet21"
                    botName: "bffnsimplehostbotdotnet21"
                    configType: 0

                  - key: "SimpleHostBotComposerDotNet"
                    botname: "bffnsimplehostbotcomposerdotnet"
                    configType: 2

                  - key: "WaterfallHostBotDotNet"
                    botname: "bffnwaterfallhostbotdotnet"
                    configType: 0  

                  - key: "SimpleHostBotJS"
                    botname: "bffnsimplehostbotjs"
                    configType: 1

                  - key: "WaterfallHostBotJS"
                    botname: "bffnwaterfallhostbotjs"
                    configType: 1

                  - key: "SimpleHostBotPython"
                    botname: "bffnsimplehostbotpython"
                    configType: 1

                  - key: "WaterfallHostBotPython"
                    botname: "bffnwaterfallhostbotpython"
                    configType: 1

            - task: UseDotNet@2
              displayName: 'Use .Net Core sdk 3.1.x'
              inputs:
                version: 3.1.x

            - task: DotNetCoreCLI@2
              displayName: 'Build'
              inputs:
                command: build
                publishWebProjects: false
                projects: 'Tests/SkillFunctionalTests/SkillFunctionalTests.csproj'
                arguments: '-v n --configuration $(BuildConfiguration)'

            - task: DotNetCoreCLI@2
              displayName: 'DotNet Test'
              inputs:
                command: test
                projects: 'Tests/SkillFunctionalTests/SkillFunctionalTests.csproj'
                arguments: "-v n --configuration $(BuildConfiguration) --no-build --no-restore --filter TestCategory!=IgnoreInAutomatedBuild&TestCategory=${{ join('|TestCategory=', scenario.testCategories) }}"
